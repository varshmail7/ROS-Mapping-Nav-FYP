; Auto-generated. Do not edit!


(cl:in-package mybot_description-msg)


;//! \htmlinclude NavigateResult.msg.html

(cl:defclass <NavigateResult> (roslisp-msg-protocol:ros-message)
  ((goal_image
    :reader goal_image
    :initarg :goal_image
    :type sensor_msgs-msg:Image
    :initform (cl:make-instance 'sensor_msgs-msg:Image))
   (decision_score
    :reader decision_score
    :initarg :decision_score
    :type cl:float
    :initform 0.0)
   (status
    :reader status
    :initarg :status
    :type cl:boolean
    :initform cl:nil))
)

(cl:defclass NavigateResult (<NavigateResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <NavigateResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'NavigateResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name mybot_description-msg:<NavigateResult> is deprecated: use mybot_description-msg:NavigateResult instead.")))

(cl:ensure-generic-function 'goal_image-val :lambda-list '(m))
(cl:defmethod goal_image-val ((m <NavigateResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader mybot_description-msg:goal_image-val is deprecated.  Use mybot_description-msg:goal_image instead.")
  (goal_image m))

(cl:ensure-generic-function 'decision_score-val :lambda-list '(m))
(cl:defmethod decision_score-val ((m <NavigateResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader mybot_description-msg:decision_score-val is deprecated.  Use mybot_description-msg:decision_score instead.")
  (decision_score m))

(cl:ensure-generic-function 'status-val :lambda-list '(m))
(cl:defmethod status-val ((m <NavigateResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader mybot_description-msg:status-val is deprecated.  Use mybot_description-msg:status instead.")
  (status m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <NavigateResult>) ostream)
  "Serializes a message object of type '<NavigateResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal_image) ostream)
  (cl:let ((bits (roslisp-utils:encode-double-float-bits (cl:slot-value msg 'decision_score))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream))
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:if (cl:slot-value msg 'status) 1 0)) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <NavigateResult>) istream)
  "Deserializes a message object of type '<NavigateResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal_image) istream)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'decision_score) (roslisp-utils:decode-double-float-bits bits)))
    (cl:setf (cl:slot-value msg 'status) (cl:not (cl:zerop (cl:read-byte istream))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<NavigateResult>)))
  "Returns string type for a message object of type '<NavigateResult>"
  "mybot_description/NavigateResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'NavigateResult)))
  "Returns string type for a message object of type 'NavigateResult"
  "mybot_description/NavigateResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<NavigateResult>)))
  "Returns md5sum for a message object of type '<NavigateResult>"
  "80cb4215bc51bc550fe50e7808061ee9")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'NavigateResult)))
  "Returns md5sum for a message object of type 'NavigateResult"
  "80cb4215bc51bc550fe50e7808061ee9")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<NavigateResult>)))
  "Returns full string definition for message of type '<NavigateResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#Define the result~%sensor_msgs/Image goal_image~%float64 decision_score~%bool status~%~%================================================================================~%MSG: sensor_msgs/Image~%# This message contains an uncompressed image~%# (0, 0) is at top-left corner of image~%#~%~%Header header        # Header timestamp should be acquisition time of image~%                     # Header frame_id should be optical frame of camera~%                     # origin of frame should be optical center of camera~%                     # +x should point to the right in the image~%                     # +y should point down in the image~%                     # +z should point into to plane of the image~%                     # If the frame_id here and the frame_id of the CameraInfo~%                     # message associated with the image conflict~%                     # the behavior is undefined~%~%uint32 height         # image height, that is, number of rows~%uint32 width          # image width, that is, number of columns~%~%# The legal values for encoding are in file src/image_encodings.cpp~%# If you want to standardize a new string format, join~%# ros-users@lists.sourceforge.net and send an email proposing a new encoding.~%~%string encoding       # Encoding of pixels -- channel meaning, ordering, size~%                      # taken from the list of strings in include/sensor_msgs/image_encodings.h~%~%uint8 is_bigendian    # is this data bigendian?~%uint32 step           # Full row length in bytes~%uint8[] data          # actual matrix data, size is (step * rows)~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'NavigateResult)))
  "Returns full string definition for message of type 'NavigateResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#Define the result~%sensor_msgs/Image goal_image~%float64 decision_score~%bool status~%~%================================================================================~%MSG: sensor_msgs/Image~%# This message contains an uncompressed image~%# (0, 0) is at top-left corner of image~%#~%~%Header header        # Header timestamp should be acquisition time of image~%                     # Header frame_id should be optical frame of camera~%                     # origin of frame should be optical center of camera~%                     # +x should point to the right in the image~%                     # +y should point down in the image~%                     # +z should point into to plane of the image~%                     # If the frame_id here and the frame_id of the CameraInfo~%                     # message associated with the image conflict~%                     # the behavior is undefined~%~%uint32 height         # image height, that is, number of rows~%uint32 width          # image width, that is, number of columns~%~%# The legal values for encoding are in file src/image_encodings.cpp~%# If you want to standardize a new string format, join~%# ros-users@lists.sourceforge.net and send an email proposing a new encoding.~%~%string encoding       # Encoding of pixels -- channel meaning, ordering, size~%                      # taken from the list of strings in include/sensor_msgs/image_encodings.h~%~%uint8 is_bigendian    # is this data bigendian?~%uint32 step           # Full row length in bytes~%uint8[] data          # actual matrix data, size is (step * rows)~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <NavigateResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal_image))
     8
     1
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <NavigateResult>))
  "Converts a ROS message object to a list"
  (cl:list 'NavigateResult
    (cl:cons ':goal_image (goal_image msg))
    (cl:cons ':decision_score (decision_score msg))
    (cl:cons ':status (status msg))
))
